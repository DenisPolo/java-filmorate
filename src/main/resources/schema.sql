CREATE TABLE IF NOT EXISTS MPA (
	MPA_ID INTEGER NOT NULL,
	MPA_NAME CHARACTER VARYING(20) NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(250) NOT NULL,
	"RELEASE" DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_FK FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES (
	GENRE_ID INTEGER NOT NULL,
	GENRE_NAME CHARACTER VARYING(20) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(25) NOT NULL,
	LOGIN CHARACTER VARYING(25) NOT NULL,
	USER_NAME CHARACTER VARYING(25) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS STATUSES (
	STATUS_ID INTEGER NOT NULL,
	STATUS_NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT STATUS_PK PRIMARY KEY (STATUS_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	STATUS_ID INTEGER NOT NULL,
	LAST_UPDATE TIMESTAMP NOT NULL,
	CONSTRAINT FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDS_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDS_FK_2 FOREIGN KEY (STATUS_ID) REFERENCES STATUSES(STATUS_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	LAST_UPDATE TIMESTAMP NOT NULL,
	CONSTRAINT LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);